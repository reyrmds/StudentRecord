CREATE DATABASE ERP

GO

USE ERP

GO

CREATE TABLE TBL_USER_ROLE(
	USER_ROLE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY
	, ROLE_NAME VARCHAR(50) NOT NULL
)

GO

CREATE TABLE TBL_DEPARTMENT(
	DEPT_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY
	,DEPT_NAME VARCHAR(100) NOT NULL
	,DEPT_DESC VARCHAR(100) NOT NULL
)

GO

CREATE TABLE TBL_PAY_GRADE(
	PAY_GRADE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY
	,PAY_GRADE_NAME VARCHAR(100) NOT NULL
	,PAY_GRADE_MINIMUM FLOAT NOT NULL
	,PAY_GRADE_MAXIMUM FLOAT NOT NULL
)

GO

CREATE TABLE TBL_SALARY_TYPE(
	SALARY_TYPE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY
	,SALARY_TYPE_NAME VARCHAR(100) NOT NULL
	,SALARY_TYPE_CODE VARCHAR(50) NOT NULL
	,UNITS_PER_YEAR INT NOT NULL
)

GO

CREATE TABLE TBL_COMPENSATION_TYPE(
	COMP_TYPE_ID INT IDENTITY(1,1) PRIMARY KEY
	,COMP_TYPE_NAME NVARCHAR(100) NOT NULL
	,COMP_TYPE_DESC NVARCHAR(MAX) NOT NULL
	,COMP_TYPE_VALUE FLOAT NOT NULL
)

GO

CREATE TABLE TBL_EMPLOYEE(
	EMP_ID INT IDENTITY PRIMARY KEY
	,EMP_NUMBER AS (CONVERT(VARCHAR,YEAR(EMP_HIRE_DATE))+'-'+REPLICATE('0',5-LEN(EMP_ID))
	+CAST(EMP_ID AS VARCHAR))+'-'+LEFT(EMP_FIRST_NAME,1)+LEFT(EMP_LAST_NAME,1)
	,EMP_FIRST_NAME NVARCHAR(100) NOT NULL
	,EMP_MIDDLE_NAME NVARCHAR(100) NULL
	,EMP_LAST_NAME NVARCHAR(100) NOT NULL
	,EMP_HIRE_DATE DATE NOT NULL
	,EMP_STATUS NVARCHAR(100) NOT NULL
	,EMP_BASE_PAY MONEY NOT NULL
	,EMP_PASSWORD NVARCHAR NULL
	,USER_ROLE_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_USER_ROLE(USER_ROLE_ID)
)

GO

CREATE TABLE TBL_EMPLOYEE_INFO(
	EMP_INFO_ID INT IDENTITY(1,1) PRIMARY KEY
	,EMP_ID INT FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID)
	,EMP_CIVIL VARCHAR (50)
	,EMP_ADDRESS VARCHAR (MAX)
	,GENDER VARCHAR(6) NOT NULL CHECK(GENDER IN ('MALE','FEMALE'))
	,BIRTHDATE DATE 
	,BIRTHPLACE NVARCHAR(100) 
	,CONTACT_NO NUMERIC 
	,EMAIL_ADD NVARCHAR(100) 
	,GSIS_NO NVARCHAR(100) 
	,PAGIBIG_NO NVARCHAR(100) 
	,PHILHEALTH_NO NVARCHAR(100) 
	,SSS_NO NVARCHAR(100) 
	,TIN_NO NVARCHAR(100) 
	,AGENCY_EMP_NO NVARCHAR(100) 
)

GO

CREATE TABLE REF_DEPARTMENT_MANAGER
(
	MANAGER_ID INT NOT NULL
		FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID)
	,DEPT_ID INT NOT NULL
		FOREIGN KEY REFERENCES TBL_DEPARTMENT(DEPT_ID)
)

GO

CREATE TABLE TBL_JOB(
	JOB_ID INT IDENTITY(1,1) PRIMARY KEY
	,JOB_NAME VARCHAR(100) NOT NULL
	,DEPT_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_DEPARTMENT(DEPT_ID)
	,JOB_DESCRIPTION VARCHAR(100) 
	,PAY_GRADE_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_PAY_GRADE(PAY_GRADE_ID)
	,SALARY_TYPE_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_SALARY_TYPE(SALARY_TYPE_ID)
)

GO

CREATE TABLE REF_EMP_JOB
(
	EMP_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID)
	,JOB_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_JOB(JOB_ID)
	,BEGIN_DATE DATE NULL
	,END_DATE DATE NULL
)

GO

CREATE TABLE TBL_SPECIALIZATION(
	SPECIALIZATION_ID INT IDENTITY(1,1) PRIMARY KEY
	,SPECIALIZATION_NAME VARCHAR(MAX) NOT NULL
	,SPECIALIZATION_DESCRIPTION VARCHAR(MAX) NOT NULL
)

GO

CREATE TABLE TBL_JOB_POST(
	JOB_POST_ID INT IDENTITY(1,1) PRIMARY KEY
	,JOB_POST_NAME VARCHAR(100) NOT NULL
	,JOB_POST_DESCRIPTION VARCHAR(MAX) NOT NULL
	,JOB_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_JOB(JOB_ID)
	,JOB_POST_CREATOR INT NOT NULL FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID)
	,SPECIALIZATION_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_SPECIALIZATION (SPECIALIZATION_ID)
	,JOB_POST_DATE DATE NOT NULL
)

GO

CREATE TABLE TBL_APPLICANT(
	APPLICANT_ID INT IDENTITY PRIMARY KEY
	,APPLICANT_NUMBER AS CONVERT(VARCHAR,YEAR(APPLICANT_CREATION_DATE))+'-'+REPLICATE('0',
		5-LEN(APPLICANT_ID))+CAST(APPLICANT_ID AS VARCHAR)
	,APPLICANT_CREATION_DATE DATE NOT NULL
	,APPLICANT_FIRST_NAME VARCHAR(100) NOT NULL
	,APPLICANT_MIDDLE_NAME VARCHAR(100)NULL
	,APPLICANT_LAST_NAME VARCHAR(100) NOT NULL
	,APPLICANT_SUFFIX VARCHAR(100)NULL
	,APP_BDATE DATE NOT NULL
	,APP_PBIRTH VARCHAR(50) NOT NULL
	,APP_SEX VARCHAR(50) NOT NULL
	,APP_CIVIL VARCHAR(50) NOT NULL
	,APP_ADDRESS VARCHAR(50) NOT NULL
	,APP_CONTACT VARCHAR(50) NOT NULL
	,APP_EMAIL VARCHAR(50) NOT NULL
	,APP_RESUME VARCHAR(MAX)NULL
	,APPLICANT_STATUS VARCHAR(50)NULL
)

GO

CREATE TABLE TBL_APPLICANT_INFO(
	APPLICANT_INFO_ID INT IDENTITY(1,1) PRIMARY KEY
	,APPLICANT_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_APPLICANT(APPLICANT_ID)
	,GENDER VARCHAR(6) NOT NULL CHECK(GENDER IN ('MALE','FEMALE'))
	,BIRTHPLACE NVARCHAR(100) NOT NULL
	,CONTACT_NO INT NOT NULL
	,EMAIL_ADD NVARCHAR(100) NOT NULL
	,GSIS_NO NVARCHAR(100) NOT NULL
	,PAGIBIG_NO NVARCHAR(100) NOT NULL
	,PHILHEALTH_NO NVARCHAR(100) NOT NULL
	,SSS_NO NVARCHAR(100) NOT NULL
	,TIN_NO NVARCHAR(100) NOT NULL
	,AGENCY_EMP_NO NVARCHAR(100) NOT NULL
)

GO

CREATE TABLE REF_JOB_APPLICANT(
	JOB_POST_ID INT FOREIGN KEY REFERENCES TBL_JOB_POST(JOB_POST_ID)
	,APPLICANT_ID INT FOREIGN KEY REFERENCES TBL_APPLICANT(APPLICANT_ID)
)

GO

CREATE TABLE TBL_EXAMINATION(
	EXAM_ID INT IDENTITY(1,1) PRIMARY KEY
	,EXAM_NAME VARCHAR(100) NOT NULL
	,EXAMINER INT FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID)
	,EXAM_DATE DATE NOT NULL
	,EXAM_PASSING_SCORE INT NOT NULL
)
 GO

CREATE TABLE TBL_APPLICANT_EVALUATION(
	APPLICANT_EVALUATION_ID INT IDENTITY(1,1) PRIMARY KEY
	,APPLICANT_ID INT FOREIGN KEY REFERENCES TBL_APPLICANT(APPLICANT_ID)
	,APPLICANT_EVALUATION_RESULT VARCHAR(MAX) NULL
)

GO


CREATE TABLE TBL_INTERVIEW(
	INTERVIEW_ID INT IDENTITY(1,1) PRIMARY KEY
	,INTERVIEW_NAME VARCHAR(100) NOT NULL
	,INTERVIEWER INT FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID)
	,INTERVIEW_SCHEDULE_DATE_TIME DATETIME NOT NULL
	,INTERVIEWEE_DATE_ARRIVED DATE NULL
	,INTERVIEW_REMARKS VARCHAR(MAX) NULL
	,EVALUATION_ID INT FOREIGN KEY REFERENCES TBL_APPLICANT_EVALUATION(APPLICANT_EVALUATION_ID)
)
 GO

CREATE TABLE REF_APPLICANT_EXAMINATION(
	EXAM_ID INT FOREIGN KEY REFERENCES TBL_EXAMINATION(EXAM_ID)
	,EXAM_SCORE INT NULL
	,EVALUATION_ID INT FOREIGN KEY REFERENCES TBL_APPLICANT_EVALUATION(APPLICANT_EVALUATION_ID)
)

GO

CREATE TABLE TBL_EMP_EVALUATION(
	EMP_ID INT FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID)
	,MANAGER_ID INT FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID)
	,SP01SI VARCHAR(150)
	,SP01AA VARCHAR(150)
	,SP01Q INT
	,SP01E INT
	,SP01T INT
	,SP01A INT
	,SP01REM  VARCHAR(MAX)
	,SP02SI  VARCHAR(150)
	,SP02AA VARCHAR(150)
	,SP02Q INT
	,SP02E INT 
	,SP02T INT
	,SP02A INT
	,SP02REM VARCHAR(MAX)
	,CF01SI  VARCHAR(150)
	,CF01AA VARCHAR(150)
	,CF01Q INT
	,CF01E INT
	,CF01T INT
	,CF01A INT
	,CF01REM VARCHAR(MAX)
	,CF02SI  VARCHAR(150)
	,CF02AA VARCHAR(150)
	,CF02Q INT
	,CF02E INT
	,CF02T INT
	,CF02A INT
	,CF02REM VARCHAR(MAX)
	,FINAL_GRADE FLOAT
)

GO

CREATE TABLE TBL_NHOB_NH
(
	NEWHIRE_ID INT IDENTITY (1,1) NOT NULL
		CONSTRAINT PK_NEWHIRE_ID PRIMARY KEY,
	EMP_NUMBER AS (CONVERT(VARCHAR, YEAR(EMP_HIRE_DATE))+'-'+REPLICATE('0', 5-LEN(NEWHIRE_ID))+CAST(NEWHIRE_ID AS VARCHAR)+'-'+LEFT(EMP_FIRST_NAME,1)+LEFT(EMP_LAST_NAME,1)),
	EMP_FIRST_NAME VARCHAR(100) NOT NULL,
	EMP_MIDDLE_NAME VARCHAR(100) NOT NULL,
	EMP_LAST_NAME VARCHAR(100) NOT NULL,
	EMP_BIRTHDATE DATE NOT NULL,
	EMP_CONTACT_NO NUMERIC NOT NULL,
	EMP_EMAIL_ADD NVARCHAR(100) NOT NULL,
	EMP_HIRE_DATE DATE NOT NULL,
	HIRING_MANAGER NVARCHAR(100) NOT NULL,
	JOB_ID INT NOT NULL
		CONSTRAINT FK_NHOB_NH_JOB_ID FOREIGN KEY
			REFERENCES TBL_JOB (JOB_ID),
	APPOINTMENT_STATUS VARCHAR(50) NOT NULL,
	ON_BOARD_STATUS VARCHAR(20) NOT NULL,
	DATE_CREATED AS (CONVERT(NVARCHAR,GETDATE(),107)),
)

GO

CREATE TABLE TBL_CHECKLIST
(
	CHECKLIST_ID INT IDENTITY (1,1) NOT NULL
		CONSTRAINT PK_CHECKLIST_ID PRIMARY KEY,
	CHECKLIST_NUMBER AS ('CL'+CONVERT(VARCHAR,YEAR(GETDATE()))+'-'+REPLICATE('0',5-LEN(CHECKLIST_ID))+CAST(CHECKLIST_ID AS VARCHAR)),
	NEWHIRE_ID INT NOT NULL
		CONSTRAINT FK_CHECKLIST_NEWHIRE_ID FOREIGN KEY
			REFERENCES TBL_NHOB_NH (NEWHIRE_ID)
)

GO

CREATE TABLE TBL_CHECKLIST_CONTENT
(
	CHECKLIST_CONTENT_ID INT IDENTITY (1,1) NOT NULL
		CONSTRAINT PK_CHECKLIST_C_ID PRIMARY KEY,
	CHECKLIST_CONTENT_NUMBER AS ('CLC'+CONVERT(VARCHAR,YEAR(GETDATE()))+'-'+REPLICATE('0',5-LEN(CHECKLIST_CONTENT_ID))+CAST(CHECKLIST_CONTENT_ID AS VARCHAR)),
	CONTENT NVARCHAR(200) NOT NULL,
	CLC_STATUS VARCHAR(10) NOT NULL,
	CHECKLIST_ID INT NOT NULL
		CONSTRAINT FK_CLC_CHECKLIST_ID FOREIGN KEY
			REFERENCES TBL_CHECKLIST (CHECKLIST_ID)
)

GO

CREATE TABLE TBL_DOCUMENT_FILES
(
	DOC_FILE_ID INT IDENTITY (1,1) NOT NULL
		CONSTRAINT PK_DOC_FILE_ID PRIMARY KEY,
	DOC_FILE_NAME NVARCHAR(100) NOT NULL,
	DOC_FILE_DESC NVARCHAR(200) NOT NULL,
	DOC_FILE_EXTENSION NVARCHAR(10) NOT NULL,
	DOC_FILE_CONTENT_TYPE NVARCHAR(200) NOT NULL,
	DOC_FILE_DATA VARBINARY(MAX) NOT NULL,
	DATE_UPLOADED AS (CONVERT(NVARCHAR,GETDATE(),107)),
)

GO

CREATE TABLE TBL_COMPETENCY_CLUSTER(
	COMPETENCY_CLUSTER_ID INT IDENTITY(1,1) NOT NULL
		CONSTRAINT PK_COMPETENCY_CLUSTER_ID PRIMARY KEY
	,COMPETENCY_CLUSTER_NAME NVARCHAR(50) NOT NULL
)

GO

CREATE TABLE TBL_COMPETENCY
(
	COMPETENCY_ID INT IDENTITY(1,1) NOT NULL
		CONSTRAINT PK_COMPETENCY_ID PRIMARY KEY
	,COMPETENCY_NAME NVARCHAR(70) NULL
	,COMPETENCY_CLUSTER_ID INT NULL FOREIGN KEY REFERENCES TBL_COMPETENCY_CLUSTER(COMPETENCY_CLUSTER_ID)
	,COMPETENCY_TYPE NVARCHAR(50) NULL
)

GO

CREATE TABLE TBL_COMPETENCY_STATUS
(
	COMPETENCY_STATUS_ID INT IDENTITY(1,1) NOT NULL
		CONSTRAINT PK_STAT_ID PRIMARY KEY
	,COMPETENCY_STATUS_EMP_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID)
	,COMPETENCY_STATUS_COMPETENCY_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_COMPETENCY(COMPETENCY_ID)
	,COMPETENCY_STATUS_TIME_STAMP DATETIME NOT NULL
		CONSTRAINT DEF_COMPETENCY_STATUS_TIME_STAMP DEFAULT GETDATE()
	,COMPETENCY_STATUS_COMPETENCY_SCORE NVARCHAR(50) NULL DEFAULT ('Basic')
)

GO

CREATE TABLE TBL_JOB_COMPETENCY
(
	JOB_COMPETENCY_ID INT IDENTITY(1,1) NOT NULL
		CONSTRAINT PK_JOB_COMPETENCY_ID PRIMARY KEY
	,JOB_COMPETENCY_JOB_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_JOB(JOB_ID)
	,JOB_COMPETENCY_COMPETENCY_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_COMPETENCY(COMPETENCY_ID)
	,JOB_COMPETENCY_COMPETENCY_LEVEL NVARCHAR(20) NULL
		CONSTRAINT DEF_JOB_COMPETENCY_COMPETENCY_LEVEL
		DEFAULT('BASIC')
)

GO

CREATE TABLE TBL_JOB_HISTORY
(
	HIST_EMP_ID INT NOT NULL
		CONSTRAINT PK_JHIST_EMP_ID_ST_DATE PRIMARY KEY
	,HIST_START_DATE DATE NOT NULL
	,HIST_END_DATE DATE NULL
	,HIST_JOB_ID INT NOT NULL
)

GO

CREATE TABLE TBL_TRAINING
(
	TRAINING_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY
	,TRAINING_NAME NVARCHAR(100) NOT NULL
	,TRAINING_DESC NVARCHAR(300) NULL
	,TRAINING_DATE_FROM DATETIME NULL
	,TRAINING_DATE_TO DATETIME NULL
)

GO

CREATE TABLE TBL_TRAINING_COMPETENCY
(
	TRAINING_COMPETENCY_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY
	,TRAINING_COMPETENCY_TRAINING_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_TRAINING(TRAINING_ID)
	,TRAINING_COMPETENCY_COMPETENCY_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_COMPETENCY(COMPETENCY_ID)
	,TRAINING_COMPETENCY_COMPETENCY_LEVEL NVARCHAR(50) NOT NULL
)

GO

CREATE TABLE TBL_COURSE_CATEGORY
(
	COURSE_CATEGORY_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY
	,COURSE_CATEGORY_NAME NVARCHAR(500) NOT NULL
)

GO

CREATE TABLE TBL_COURSE
(
	COURSE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY
	,COURSE_NAME NVARCHAR(500) NOT NULL
	,COURSE_DESCRIPTION NVARCHAR(500) NOT NULL
	,COURSE_LEARNINGFILE VARBINARY(MAX) NULL
	,COURSE_CATEGORY_ID INT NULL FOREIGN KEY REFERENCES TBL_COURSE_CATEGORY(COURSE_CATEGORY_ID)
	,COURSE_OUTCOME NVARCHAR(500)
)

GO

CREATE TABLE TBL_EMPLOYEE_COURSE_ENROLMENT(
	EMP_C_E_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY
	,EMP_C_E_DATEOFENROLMENT DATETIME NOT NULL
	,EMP_C_E_DATEOFCOMPLETION DATETIME NOT NULL
	,EMP_C_E_COURSECOMPLETED NUMERIC(18,0) NOT NULL
	,EMP_ID INT NULL FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID)
	,COURSE_ID INT NULL FOREIGN KEY REFERENCES TBL_COURSE(COURSE_ID)
)

GO

CREATE TABLE TBL_TIME_ATTENDANCE
(
	TD_ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
	TD_ENTRY_DATE DATE NULL,
	TD_TIME_IN TIME NULL,
	TD_TIME_OUT TIME NULL,
	EMP_ID INT NOT NULL CONSTRAINT FK_EMPA FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID),
	TD_REMARKS VARCHAR(MAX) NULL
)

GO

CREATE TABLE TBL_LEAVE
(
	LVE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY
	,LVE_NAME NVARCHAR(50) NULL
	,LVE_CODE NVARCHAR(10) NULL
	,LVE_TYPE NVARCHAR(20) NULL
)

GO

CREATE TABLE TBL_EMP_LEAVE
(
	EMP_LVE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY
	,EMP_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID)
	,LVE_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_LEAVE(LVE_ID)
	,LVE_BAL NUMERIC(5,0) NULL
)

GO

CREATE TABLE TBL_LEAVE_INFO
(
	LVE_INFO_ID INT NOT NULL PRIMARY KEY
	,LVE_ROLE NVARCHAR(50) NULL
	,LVE_LOCATION NVARCHAR(50) NULL
	,LVE_GENDER NVARCHAR(6) NULL
	,LVE_MARITAL NVARCHAR(10) NULL
	,LVE_PERIOD NVARCHAR(10) NULL
	,ACCRUE_DATE NVARCHAR(50) NULL
	,LVE_COUNT NUMERIC(4,0) NULL
	,ISACCRUALRESET BIT NULL
	,APPLY_BEFORE NUMERIC(4,0) NULL
	,MAXCONSECUTIVE NUMERIC(4,0) NULL
	,ISCONSIDERDATE BIT NULL
	,NEW_PROBATION_PERIOD NVARCHAR(20) NULL
	,NEW_WAITING_PERIOD NUMERIC(4,0) NULL
	,NEW_INITIAL_VALUE NUMERIC(4,0) NULL
	,ISADMINASSIGN BIT NULL
	,ISBEYONDLIMIT BIT NULL
	,ISCARRYFORWARD BIT NULL
	,CF_MAX NUMERIC(4,0) NULL
	,CF_LIFETIME NUMERIC(4,0) NULL
	,ISCARRYEXCEED BIT NULL
)

GO

CREATE TABLE TBL_LEAVE_REQ
(
	LVE_REQ_ID INT IDENTITY(1,1) NOT NULL
	,EMP_ID INT NOT NULL FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID)
	,LVE_TYPE INT NULL FOREIGN KEY REFERENCES TBL_LEAVE(LVE_ID)
	,LVE_START_DATE NVARCHAR(20) NULL
	,LVE_END_DATE NVARCHAR(20) NULL
	,LVE_NO_OF_DAYS NUMERIC(2,0) NULL
	,LVE_REASON NVARCHAR(200) NULL
	,LVE_REMARKS NVARCHAR(300) NULL
	,LVE_STATUS NVARCHAR(15) NULL
	,LVE_FILE_DATE NVARCHAR(50) NULL
)

GO

CREATE TABLE TBL_SCHEDULE( 
	SCHED_ID INT IDENTITY(1,1) PRIMARY KEY
	,START_DATE DATETIME NOT NULL
	,END_DATE DATETIME NULL
	,SCHED_REMARKS VARCHAR(MAX) NULL

)

GO 

CREATE TABLE REF_SCHED_DAYS(
	SCHEDULE_ID INT FOREIGN KEY REFERENCES TBL_SCHEDULE(SCHED_ID)
	, SCHED_DAYS VARCHAR
)

GO

CREATE TABLE TBL_SHIFT(
	SHIFT_ID INT IDENTITY(1,1) PRIMARY KEY
	, SHIFT_TYPE NVARCHAR(20) NOT NULL
	, GRACE_PERIOD TIME NULL 
	, START_TIME TIME NOT NULL
	, END_TIME TIME NOT NULL
	, SHIFT_REMARKS VARCHAR(MAX) NULL
	, SCHEDULE_ID INT FOREIGN KEY REFERENCES TBL_SCHEDULE(SCHED_ID)
)

GO

CREATE TABLE REF_SCHEDULING(
	EMP_ID INT FOREIGN KEY REFERENCES TBL_EMPLOYEE(EMP_ID)
	, JOB_ID INT CONSTRAINT FK_RF_TBL_JOB FOREIGN KEY REFERENCES TBL_JOB(JOB_ID)
	, SHIFT_ID INT FOREIGN KEY REFERENCES TBL_SHIFT(SHIFT_ID)
	, SCHEDULE_ID INT FOREIGN KEY REFERENCES TBL_SCHEDULE(SCHED_ID)
)


GO

CREATE TABLE SHIFT_SCHED_FILES(
	SSFILE_ID INT IDENTITY(1,1) PRIMARY KEY
	, FILENAME NVARCHAR(100)
	, FILETYPE NVARCHAR(100)
	, DOCUMENT_FILE VARBINARY(MAX)
	, FILE_DESCRIPTION VARCHAR(MAX) NULL
	, SCHEDULE_ID INT FOREIGN KEY REFERENCES TBL_SCHEDULE(SCHED_ID)
)

GO 

CREATE TABLE TBL_OVERTIME (
	OVERTIME_ID INT IDENTITY(1,1) PRIMARY KEY
	, OVERTIME_REASON VARBINARY(MAX) NULL
	, OVERTIME_STATUS VARCHAR DEFAULT ('PENDING')
	, SCHEDULE_ID INT FOREIGN KEY REFERENCES TBL_SCHEDULE(SCHED_ID)
	, CONSTRAINT CHK_OT CHECK(OVERTIME_STATUS IN('APPROVED', 'NOT APPROVED', 'CANCELLED', 'PENDING'))
)

GO

CREATE TABLE TBL_REIMBURSEMENT
(
	REIMB_ID INT NOT NULL IDENTITY(1,1),
	REIMB_PURPOSE NVARCHAR (100) NOT NULL,
	REIMB_DTREQ DATE NOT NULL,
	EMP_ID INT NOT NULL,
	REIMB_STAT NVARCHAR(50) NOT NULL,
	CONSTRAINT PK_REIMB PRIMARY KEY (REIMB_ID),
	CONSTRAINT FK_REIMB_EMP FOREIGN KEY (EMP_ID)
		REFERENCES TBL_EMPLOYEE (EMP_ID)
)

GO

CREATE TABLE TBL_EXPENSE
(
	EXP_ID INT NOT NULL IDENTITY(1,1),
	EXP_DTPURCHASE DATE NOT NULL,
	EXP_DESC NVARCHAR(100) NOT NULL,
	EXP_UPRICE MONEY NOT NULL, -- MONEY
	EXP_QTY INT NOT NULL,
	REIMB_ID INT NOT NULL,
	CONSTRAINT PK_EMP PRIMARY KEY (EXP_ID),
	CONSTRAINT FK_REIMB_EXP FOREIGN KEY (REIMB_ID)
		REFERENCES TBL_REIMBURSEMENT (REIMB_ID)
)

GO

CREATE TABLE TBL_CLAIMS
(
	CLAIM_ID INT NOT NULL IDENTITY(1,1),
	CLAIMS_DTAPPROVED DATE NOT NULL,
	TOTAL_AMOUNT MONEY NOT NULL, -- MONEY
	CLAIM_STAT NVARCHAR NOT NULL,  -- PENDING, UNCLAIMED/READY TO CLAIM, CLAIMED
	REIMB_ID INT NOT NULL,
	CONSTRAINT PK_CLAIMS PRIMARY KEY (CLAIM_ID),
	CONSTRAINT FK_CLAIM_REIMB FOREIGN KEY (REIMB_ID)	
		REFERENCES TBL_REIMBURSEMENT (REIMB_ID)
)

GO

CREATE TABLE TBL_BUDGET
(
	BUDGET_ID INT NOT NULL IDENTITY(1,1),
	INITIAL_BUDGET MONEY NOT NULL,  -- MONEY
	BUDGET_DTSTART DATE NOT NULL,
	BUDGET_DTEND DATE NOT NULL,
	DEPT_ID INT NOT NULL,
	CONSTRAINT PK_BUDGET PRIMARY KEY (BUDGET_ID),
	CONSTRAINT FK_BUDGET_DEPT FOREIGN KEY (DEPT_ID)
		REFERENCES [dbo].[TBL_DEPARTMENT] ([DEPT_ID])
)

GO

CREATE TABLE TBL_TIMESHEET
(
	 T_ID NUMERIC IDENTITY(1,1) NOT NULL 
	 CONSTRAINT PK_T PRIMARY KEY(T_ID),
	 TEMPLOYEE_ID INT
	 CONSTRAINT FK_TEMP FOREIGN KEY(TEMPLOYEE_ID)
	 REFERENCES TBL_EMPLOYEE(EMP_ID),
	 TIMESHEET_STATUS VARCHAR(100) DEFAULT 'UNSUBMITTED',
	 APPROVER VARCHAR(100) DEFAULT 'NONE',
	 DATE_APPROVE DATE DEFAULT '00-00-0000',
	 DATE_SUBMISSION DATE DEFAULT '00-00-0000',
	 TREGULAR_HOURS FLOAT DEFAULT 00.00,
	 TOVERTIME_HOURS FLOAT DEFAULT 00.00, 
	 TUNDERTIME_HOURS FLOAT DEFAULT 00.00, 
	 TLATE_HOURS FLOAT DEFAULT 00.00,
	 TOTAL_HOURS FLOAT DEFAULT 00.00,
	 TIMESHEET_TYPE VARCHAR(100) DEFAULT 'NONE',
	 FORTHEMONTHOF VARCHAR(100) DEFAULT 'NONE',
	 YEAROFTIMESHEET INT DEFAULT 0000,
	 WEEKSTART DATETIME,
	 WEEKEND DATETIME
)

GO

CREATE TABLE TBL_GSIS
(
  GSIS_ID INT IDENTITY(1,1) NOT NULL,
  GSIS_EMPLOYEE_SHARE FLOAT NOT NULL,
  GSIS_EMPLOYER_SHARE FLOAT NOT NULL,
  GSIS_TOTAL_CONTRI FLOAT NOT NULL
)

GO

CREATE TABLE TBL_PAGIBIG
( 
  PGIBG_ID INT IDENTITY(1,1) NOT NULL,
  PGIBG_EMPLOYEE_SHARE FLOAT NOT NULL,
  PGIBG_EMPLOYER_SHARE FLOAT NOT NULL,
  PGIBG_TOTAL_CONTRI FLOAT NOT NULL
)

GO
CREATE TABLE TBL_PHILHEALTH
( PHIL_ID INT IDENTITY(1,1) NOT NULL,
  PHIL_EMPLOYEE_SHARE FLOAT NOT NULL,
  PHIL_EMPLOYER_SHARE FLOAT NOT NULL,
  PHIL_MPREM_RATE FLOAT NOT NULL, --monthly premium rate
  PHIL_TOTAL_CONTRI FLOAT NOT NULL
)

GO

CREATE TABLE TBL_PAYROLL_CYCLE
(
  PCYCLE_ID INT IDENTITY (1,1) NOT NULL PRIMARY KEY,
  PCYCLE_MONTH NVARCHAR(50) NOT NULL,
  PCYCLE_YEAR NVARCHAR(50) NOT NULL,
  PCYCLE_DATE_FROM DATE NOT NULL,
  PCYCLE_DATE_TO DATE NOT NULL,
  PCYCLE_NAME NVARCHAR(100) NOT NULL,
  PCYCLE_STATUS NVARCHAR(50) NOT NULL
)

GO

CREATE TABLE TBL_WITHHOLDING
(
   WITHHOLDING_ID INT IDENTITY (1,1) NOT NULL PRIMARY KEY,
   BRACKET_NO INT NOT NULL,
   TAX_INC_FROM FLOAT NOT NULL,
   TAX_INC_TO FLOAT NOT NULL,
   INC_TAX_RATE NVARCHAR(100) NOT NULL
)

GO

CREATE TABLE TBL_T_PAYROLL
( 
  PAYROLL_ID INT IDENTITY(1,1) NOT NULL,
  PR_START DATE NOT NULL,
  PR_END DATE NOT NULL,
  EMP_ID INT NOT NULL,
  COMP_TYPE_ID INT NOT NULL,
  GSIS_ID INT NOT NULL,
  PGIBG_ID INT NOT NULL,
  PHIL_ID INT NOT NULL,
  GROSS_SALARY FLOAT NOT NULL,
  WITHOLDING_TAX FLOAT NOT NULL,
  TAXABLE_INCOME FLOAT NOT NULL,
  NET_SALARY FLOAT NOT NULL,
  PCYCLE_ID INT NOT NULL,
  PAYROLL_STATUS VARCHAR(50) NOT NULL

  PRIMARY KEY(PAYROLL_ID),
  FOREIGN KEY(EMP_ID)
  REFERENCES TBL_EMPLOYEE(EMP_ID),
  FOREIGN KEY(COMP_TYPE_ID)
  REFERENCES TBL_COMPENSATION_TYPE(COMP_TYPE_ID),

)


